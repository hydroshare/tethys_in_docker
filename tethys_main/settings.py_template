"""
Settings for Tethys Platform

This file contains default Django and other settings for the Tethys Platform.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import sys

from django.contrib.messages import constants as message_constants

BASE_DIR = os.path.dirname(os.path.dirname(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "<TETHYS_MAIN_SECRET_KEY>"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = <TETHYS_MAIN_DEBUG>

# List those who should be notified of an error when DEBUG = False as a tuple of (name, email address).
# i.e.: ADMINS = (('John', 'john@example.com'), ('Mary', 'mary@example.com'))
ADMINS = ()

# See https://docs.djangoproject.com/en/1.8/topics/logging/#configuring-logging for more logging configuration options.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '[%(asctime)s] %(levelname)s %(message)s',
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
    },
    'handlers': {
        'console': {
            'level': 'ERROR',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'stream': sys.stdout,
        },
        'log_all_handler': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/logs/tethys_log_all_debug.log',
            'formatter': 'verbose',
            'maxBytes': 1024*1024*15,  # 15MB
            'backupCount': 10,
        },
        'tethys_django_handler': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/logs/tethys_django_debug.log',
            'formatter': 'verbose',
            'maxBytes': 1024*1024*15,  # 15MB
            'backupCount': 10,
        },
        'metrics_handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/logs/tethys_metrics.log',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'metrics_logger': {
                'level': 'DEBUG',
                'handlers': ['metrics_handler'],
                'propagate': False,
        },
        'tethys_apps': {
            'level': 'DEBUG',
            'handlers': ['console', 'tethys_django_handler'],
        },
        'tethys_services': {
            'level': 'ERROR',
            'handlers': ['console', 'tethys_django_handler'],
        },
        'tethys_compute': {
            'level': 'ERROR',
            'handlers': ['console', 'tethys_django_handler'],
        },
        'tethys_config': {
            'level': 'ERROR',
            'handlers': ['console', 'tethys_django_handler'],
        },
        'tethys_gizmos': {
            'level': 'ERROR',
            'handlers': ['console', 'tethys_django_handler'],
        },
        'tethys_portal': {
            'level': 'ERROR',
            'handlers': ['console', 'tethys_django_handler'],
        },
        'tethys_sdk': {
            'level': 'ERROR',
            'handlers': ['console', 'tethys_django_handler'],
        },
        # 'tethyscluster': {
        #     'level': 'ERROR',
        #     'handlers': ['tethys_django_handler'],
        # },
        'tethys': {
            'level': 'ERROR',
            'handlers': ['console', 'tethys_django_handler'],
        },
        'django': {
            'level': 'DEBUG',
            'handlers': ['console', 'tethys_django_handler'],
        },
        '': {
            'level': 'DEBUG',
            'handlers': ['console', 'log_all_handler'],
        },
    },
}

ALLOWED_HOSTS = ["<TETHYS_NGINX_DOMAIN_NAME>"]

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_gravatar',
    'bootstrap3',
    'termsandconditions',
    'tethys_config',
    'tethys_apps',
    'tethys_gizmos',
    'tethys_services',
    'tethys_compute',
    'social.apps.django_app.default',
    'guardian',
    'corsheaders',
    'django_celery_beat',
    'django_celery_results',
    'heartbeat',
)

# Celery settings
BROKER_URL = 'amqp://myuser:mypassword@localhost:5672/myvhost'
#BROKER_URL = 'amqp://guest:guest@tethys_in_docker_rabbitmq:5672/'
CELERY_RESULT_BACKEND = 'django-db'
#result_expires = 30 * 24 * 3600   # Remove records after 1 month. This setting does not work. A workaround is set in celery.py
CELERY_TRACK_STARTED = True  # report "job started" status

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'tethys_portal.middleware.MetricsTracking',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'tethys_portal.middleware.TethysSocialAuthExceptionMiddleware',
)

CORS_ORIGIN_ALLOW_ALL = True
from corsheaders.defaults import default_methods
CORS_ALLOW_METHODS = default_methods + ()
from corsheaders.defaults import default_headers
CORS_ALLOW_HEADERS = default_headers + ()

AUTHENTICATION_BACKENDS = (
    # Do not remove following line. it is placeholder for 'tethys_services.backends.hydroshare.HydroShareOAuth2',
    #_#_#_#<TETHYS_MAIN_HYDROSHARE_BACKEND>#_#_#_#,
    # Do not remove following line. it is placeholder for 'tethys_services.backends.hydroshare_beta.HydroShareBetaOAuth2',
    #_#_#_#<TETHYS_MAIN_HYDROSHARE_BETA_BACKEND>#_#_#_#,
    # Do not remove following line. it is placeholder for 'tethys_services.backends.hydroshare_playground.HydroSharePlaygroundOAuth2',
    #_#_#_#<TETHYS_MAIN_HYDROSHARE_PLAYGROUND_BACKEND>#_#_#_#,
    #'social.backends.linkedin.LinkedinOAuth2',
    #'social.backends.google.GoogleOAuth2',
    #'social.backends.facebook.FacebookOAuth2',
    'django.contrib.auth.backends.ModelBackend',
    'guardian.backends.ObjectPermissionBackend',
)

# Terms and conditions settings
ACCEPT_TERMS_PATH = '/terms/accept/'
TERMS_EXCLUDE_URL_PREFIX_LIST = {'/admin/', '/oauth2/', '/handoff/', '/accounts/', '/terms/'}
TERMS_EXCLUDE_URL_LIST = {'/'}
TERMS_BASE_TEMPLATE = 'page.html'

ROOT_URLCONF = 'tethys_portal.urls'

WSGI_APPLICATION = 'tethys_portal.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'tethys_default',
        #'USER': 'tethys_default',
        #'PASSWORD': '<TETHYS_POSTGIS_TETHYS_DEFAULT_PASS>',
        'USER': 'tethys_super',
        'PASSWORD': '<TETHYS_POSTGIS_TETHYS_SUPER_PASS>',
        'HOST': 'tethys_in_docker_postgis',
        'PORT': '5432'
    }
}

# Tethys App Persistent Stores Settings
TETHYS_DATABASES = {
    'tethys_db_manager': {
        'NAME': 'tethys_db_manager',
        'USER': 'tethys_db_manager',
        'PASSWORD': '<TETHYS_POSTGIS_TETHYS_DB_MANAGER_PASS>',
        'HOST': 'tethys_in_docker_postgis',
        'PORT': '5432'
    },
    'tethys_super': {
        'NAME': 'tethys_super',
        'USER': 'tethys_super',
        'PASSWORD': '<TETHYS_POSTGIS_TETHYS_SUPER_PASS>',
        'HOST': 'tethys_in_docker_postgis',
        'PORT': '5432'
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.template.context_processors.request',
                'django.contrib.messages.context_processors.messages',
                'social.apps.django_app.context_processors.backends',
                'social.apps.django_app.context_processors.login_redirect',
                'tethys_config.context_processors.tethys_global_settings_context',
                'tethys_apps.context_processors.tethys_apps_context',
                'tethys_gizmos.context_processors.tethys_gizmos_context'
            ],
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
                'tethys_apps.template_loaders.TethysAppsTemplateLoader'
            ],
            'debug': DEBUG
        }
    }
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'), )

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'tethys_apps.utilities.TethysAppsStaticFinder'
)

# Uncomment the next line for production installation
STATIC_ROOT = '/var/www/tethys/static'

# Uncomment the next line for production installation
# Tethys Workspaces
TETHYS_WORKSPACES_ROOT = '/var/www/tethys/workspaces'

# Messaging settings
MESSAGE_TAGS = {message_constants.DEBUG: 'alert-danger',
                message_constants.INFO: 'alert-info',
                message_constants.SUCCESS: 'alert-success',
                message_constants.WARNING: 'alert-warning',
                message_constants.ERROR: 'alert-danger'}

# Gravatar Settings
GRAVATAR_URL = 'http://www.gravatar.com/'
GRAVATAR_SECURE_URL = 'https://secure.gravatar.com/'
GRAVATAR_DEFAULT_SIZE = '80'
GRAVATAR_DEFAULT_IMAGE = 'retro'
GRAVATAR_DEFAULT_RATING = 'g'
GRAVATAR_DFFAULT_SECURE = True

# Use this setting to bypass the home page
BYPASS_TETHYS_HOME_PAGE = <TETHYS_MAIN_BYPASS_TETHYS_HOME_PAGE>

# Use this setting to disable open account signup
ENABLE_OPEN_SIGNUP = <TETHYS_MAIN_ENABLE_OPEN_SIGNUP>

# The default login page when @login_required decorator is in use
LOGIN_URL = <TETHYS_MAIN_LOGIN_URL>

# User is supposed to redirect to this page once regular login (not OAuth) is done
# https://docs.djangoproject.com/en/1.9/ref/settings/#login-redirect-url
# Looks like it does not work in Tethys
#LOGIN_REDIRECT_URL = "https://www.google.com/"

# Uncomment the following lines and adjust to match your setup to enable emailing capabilities
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_HOST = 'localhost'
#EMAIL_PORT = 25
#EMAIL_HOST_USER = ''
#EMAIL_HOST_PASSWORD = ''
#EMAIL_USE_TLS = False
#DEFAULT_FROM_EMAIL = 'Example <noreply@exmaple.com>'

# OAuth Settings
# http://psa.matiasaguirre.net/docs/configuration/index.html
SOCIAL_AUTH_ADMIN_USER_SEARCH_FIELDS = ['username', 'first_name', 'email']
SOCIAL_AUTH_SLUGIFY_USERNAMES = True
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/apps/'
SOCIAL_AUTH_LOGIN_ERROR_URL = '/accounts/login/'

# OAuth Providers
## Google
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = ''
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = ''

## Facebook
SOCIAL_AUTH_FACEBOOK_KEY = ''
SOCIAL_AUTH_FACEBOOK_SECRET = ''
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']

## LinkedIn
SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = ''
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = ''


## www-https
SOCIAL_AUTH_HYDROSHARE_KEY = '<TETHYS_MAIN_SOCIAL_AUTH_HYDROSHARE_KEY>'
SOCIAL_AUTH_HYDROSHARE_SECRET = '<TETHYS_MAIN_SOCIAL_AUTH_HYDROSHARE_SECRET>'


## beta-https
SOCIAL_AUTH_HYDROSHARE_BETA_KEY = '<TETHYS_MAIN_SOCIAL_AUTH_HYDROSHARE_BETA_KEY>'
SOCIAL_AUTH_HYDROSHARE_BETA_SECRET = '<TETHYS_MAIN_SOCIAL_AUTH_HYDROSHARE_BETA_SECRET>'

## playground-https
SOCIAL_AUTH_HYDROSHARE_PLAYGROUND_KEY = '<TETHYS_MAIN_SOCIAL_AUTH_HYDROSHARE_PLAYGROUND_KEY>'
SOCIAL_AUTH_HYDROSHARE_PLAYGROUND_SECRET = '<TETHYS_MAIN_SOCIAL_AUTH_HYDROSHARE_PLAYGROUND_SECRET>'

# Django Guardian Settings
ANONYMOUS_USER_ID = -1
# GUARDIAN_RAISE_403 = False  # Mutually exclusive with GUARDIAN_RENDER_403
# GUARDIAN_RENDER_403 = False  # Mutually exclusive with GUARDIAN_RAISE_403
# GUARDIAN_TEMPLATE_403 = ''
# ANONYMOUS_DEFAULT_USERNAME_VALUE = 'anonymous'

# django is behind a proxy server that handles https for django
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# geoserver settings
# these settings will be used by some legacy apps that do not make use of Tethys Spatial Dataset Service
GEOSERVER_URL_BASE = <TETHYS_GEOSERVER_URL_BASE>
GEOSERVER_URL_SSL_BASE = <TETHYS_GEOSERVER_URL_SSL_BASE>
GEOSERVER_USER_NAME = <TETHYS_GEOSERVER_USER_NAME>
GEOSERVER_USER_PASSWORD = <TETHYS_GEOSERVER_USER_PASSWORD>


# celery settings for NWM Viewer app
NWM_VIEWER_SUBSETTING_SOFT_TIME_LIMIT=1200  # 20 Min in seconds
NWM_VIEWER_SUBSETTING_TIME_LIMIT=1800  # 30 Min in seconds
NWM_VIEWER_SUBSETTING_RATE_LIMIT="10/m"  # number of request pre min
NWM_VIEWER_SUBSETTING_CLEAN_UP_MINUTE="1" # cleanup - "1" the 1st minute
NWM_VIEWER_SUBSETTING_CLEAN_UP_HOUR="*/6" # cleanup - "*/6" every 6 hour
NWM_VIEWER_SUBSETTING_RESULT_LIFE_MINUTE=1440  # 1 day in minutes