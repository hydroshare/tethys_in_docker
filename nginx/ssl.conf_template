server {
    listen          80;
    server_name     <TETHYS_NGINX_DOMAIN_NAME>;
    return          301 https://$server_name$request_uri;
}

server {
    listen          443 ssl;
    server_name     <TETHYS_NGINX_DOMAIN_NAME>;

    #if ($http_host != $server_name) {
    #    rewrite ^ https://$server_name$request_uri permanent;
    #}

    access_log      /logs/nginx_access.log upstreamlog;

    # access_log  '/logs/nginx_headers.log' 'json';
    #set $log_line '';
    #log_by_lua '
    #    local cjson = require "cjson"
    #    local json = cjson.new()
    #    local log_line = {}
    #
    #    log_line.request = {}
    #    log_line.request.remoteAddress = ngx.var.remote_addr
    #    log_line.request.protocol = ngx.var.server_protocol
    #    log_line.request.method = ngx.req.get_method()
    #    log_line.request.url = {}
    #    log_line.request.url.host = ngx.var.host
    #    log_line.request.url.uri = ngx.var.request_uri
    #    log_line.request.headers = ngx.req.get_headers()
    #
    #    log_line.response = {}
    #    log_line.response.headers = ngx.resp.get_headers()
    #
    #    ngx.var.log_line = json.encode(log_line)
    #';


    charset         utf-8;
    client_max_body_size 4G;

    ssl on;
    ssl_certificate         /certs/server.crt;
    ssl_certificate_key     /certs/server.key;
    # ssl_trusted_certificate  /certs/cert-chain.crt;

    #see: https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-load-balancing-with-ssl-termination
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;

    ssl_prefer_server_ciphers       on;
    ssl_protocols                   TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                     ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

    add_header Strict-Transport-Security "max-age=31536000";

    # serve static files
    #_#_ENABLE_NGINX_STATIC_FILES_#_#location /static/ {
    #_#_ENABLE_NGINX_STATIC_FILES_#_#    root /var/www/tethys;
    #_#_ENABLE_NGINX_STATIC_FILES_#_#}

    location = /favicon.ico {
        alias /var/www/tethys_favicon.ico;
    }

    #_#_ENABLE_NGINX_ERROR_PAGE_#_#error_page 404 500 501 502 503 504 /error_500.html;
    #_#_ENABLE_NGINX_ERROR_PAGE_#_#location = /error_500.html {
    #_#_ENABLE_NGINX_ERROR_PAGE_#_#        alias /var/www/error_500.html;
    #_#_ENABLE_NGINX_ERROR_PAGE_#_#        internal;
    #_#_ENABLE_NGINX_ERROR_PAGE_#_#}

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    client_body_buffer_size 1m;
    proxy_intercept_errors on;
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 256 16k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;
    proxy_max_temp_file_size 0;
    proxy_connect_timeout 300s;
    proxy_read_timeout 300;

    # geoserver
    location /geoserver/ {
        proxy_pass http://tethys_in_docker_geoserver:8181;
        proxy_redirect http://$server_name:8181/ https://$server_name/;
    }

    # n52wps
    location /wps/ {
        proxy_pass http://tethys_in_docker_n52wps:8080;
        proxy_redirect http://$server_name:8080/ https://$server_name/;
    }

    # gunicorn django server
    location / {
        proxy_pass http://tethys_in_docker_main:8000;
        proxy_redirect off;
    }

}
