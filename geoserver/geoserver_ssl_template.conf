upstream backend {
  least_conn;
  {% for port in http_ports %}
  server localhost:{{ port }};
  {% endfor %}
}

upstream rest {
  least_conn;
  {% for rest_port in rest_ports %}
  server localhost:{{ rest_port }};
  {% endfor %}
}

server {
    listen               8181;

    # this server_name should be a "public" domain or ip that other container can access
    # so localhost and 127.0.0.1 do not work as they are local to this geoserver container
    server_name          {{server_name}};

    charset         utf-8;
    client_max_body_size 2G;

    ######### comment out this section to disable http access ###############
    location / {
    proxy_pass http://backend;
    }

    # Pass web and login requests to first node
    location /geoserver/j_spring_security {
        proxy_pass http://localhost:{{ http_ports[0] }};
    }

    location /geoserver/web/ {
      proxy_pass http://localhost:{{ http_ports[0] }};
    }

    # Pass REST requests to the nodes enabled for REST
    location /geoserver/rest/ {
      proxy_pass http://rest;
    }

    location /geoserver/gwc/rest/ {
      proxy_pass http://rest;
    }
    #######################################################################


    ######### uncomment this section to redirect http to https ############
    # this port should be same as external port of this container
    #return          301 https://$server_name:{{port_ssl_external}}$request_uri;
    #######################################################################
}

server {
    # this port should be same as external port of this container
    listen             {{port_ssl_internal}} ssl;

    # this server_name should be a domain or ip that other container can access
    # so localhost and 127.0.0.1 do not work as they are local to this geoserver container
    server_name        {{server_name}};

    access_log      /var/log/nginx/access-ssl.log combined;
    error_log       /var/log/nginx/error-ssl.log error;

    charset         utf-8;
    client_max_body_size 2G;

    ssl on;
    ssl_certificate         /certs/server.crt;
    ssl_certificate_key     /certs/server.key;
    # ssl_trusted_certificate  /certs/cert-chain.crt;

    #see: https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-load-balancing-with-ssl-termination
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;

    ssl_prefer_server_ciphers       on;
    ssl_protocols                   TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                     ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

    add_header Strict-Transport-Security "max-age=31536000";

    location / {
    proxy_pass http://backend;
    }

    # Pass web and login requests to first node
    location /geoserver/j_spring_security {
        proxy_pass http://localhost:{{ http_ports[0] }};
    }

    location /geoserver/web/ {
      proxy_pass http://localhost:{{ http_ports[0] }};
    }

    # Pass REST requests to the nodes enabled for REST
    location /geoserver/rest/ {
      proxy_pass http://rest;
    }

    location /geoserver/gwc/rest/ {
      proxy_pass http://rest;
    }
}
